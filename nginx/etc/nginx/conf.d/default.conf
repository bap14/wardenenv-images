# default Docker DNS server
resolver 127.0.0.11;

# Select upstream backend to use based on presense of Xdebug cookies and Blackfire headers
map "$http_X_BLACKFIRE_QUERY:$cookie_XDEBUG_SESSION$cookie_XDEBUG_PROFILE$cookie_XDEBUG_TRACE$arg_XDEBUG_SESSION$arg_XDEBUG_SESSION_START:$cookie_SPX_ENABLED$cookie_SPX_KEY$arg_SPX_ENABLED$arg_SPX_KEY$arg_SPX_UI_URI" $fastcgi_backend {
    # Nothing for debug and nothing for blackfire means its a pure request
    "::" ${NGINX_UPSTREAM_HOST}:${NGINX_UPSTREAM_PORT};

    # Use blackfire if the blackfire query is specified AND no debug cookie is set
    "~::$" ${NGINX_UPSTREAM_BLACKFIRE_HOST}:${NGINX_UPSTREAM_BLACKFIRE_PORT};

    # Use SPX if the SPX cookie is specified AND no xdebug cookie is set
    "~::.+" ${NGINX_UPSTREAM_SPX_HOST}:${NGINX_UPSTREAM_SPX_PORT};

    # In all other cases, a debug cookie will be present; use debug container
    default ${NGINX_UPSTREAM_DEBUG_HOST}:${NGINX_UPSTREAM_DEBUG_PORT};
}

server {
    listen 80;

    root ${NGINX_ROOT}${NGINX_PUBLIC};
    set $MAGE_ROOT ${NGINX_ROOT};

    index index.html index.php;
    autoindex off;
    charset UTF-8;

    include /etc/nginx/available.d/${NGINX_TEMPLATE};
    include /etc/nginx/default.d/*.conf;
}

# create cache for resized images
proxy_cache_path /tmp/nginx-catalog-media-cache/
    levels=1:2
    keys_zone=catalog_media:10m
    inactive=24h
    max_size=500m;

# declare resize streams for legacy and new browsers
map $http_accept $image_resize_stream {
    default image_resize_legacy;
    ~image/webp image_resize_webp;
}

upstream image_resize_webp {
    server localhost:20001;
}

upstream image_resize_legacy {
    server localhost:20002;
}

# server for modern browsers
server {
    server_name localhost;
    listen 20001;

    root ${NGINX_ROOT}${NGINX_PUBLIC};
    set $MAGE_ROOT ${NGINX_ROOT};

    location ~* ^/(?<path>media/catalog/.*)$ {
        set $ext "";

        # when request is made for image.jpg,
        # check if image.jpg.webp is available.
        if (-f $MAGE_ROOT/pub/$path.webp) {
            set $ext .webp;
        }

        alias $MAGE_ROOT/pub/$path$ext;

        set $width "-";
        set $height "-";
        if ($arg_width != '') {
            set $width $arg_width;
        }
        if ($arg_height != '') {
            set $height $arg_height;
        }

        image_filter resize $width $height;
        image_filter_interlace on;
        image_filter_jpeg_quality 75;
        image_filter_webp_quality 75;
    }
}

# server for legacy browsers
server {
    server_name localhost;
    listen 20002;

    root ${NGINX_ROOT}${NGINX_PUBLIC};

    location / {
        set $width "-";
        set $height "-";
        if ($arg_width != '') {
            set $width $arg_width;
        }
        if ($arg_height != '') {
            set $height $arg_height;
        }

        image_filter resize $width $height;
        image_filter_interlace on;
        image_filter_jpeg_quality 75;
        image_filter_webp_quality 75;
    }
}