name: PHP-FPM Image Builder
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to build'
        required: true
        default: 'development'

env:
  IMAGE_AUTHORS: ${{ vars.IMAGE_AUTHORS || 'wardenenv' }}
  WARDEN_IMAGE_REPOSITORY: ${{ vars.WARDEN_IMAGE_REPOSITORY || 'ghcr.io/wardenenv' }}
  DOCKERHUB_IMAGE_REPOSITORY: ${{ vars.DOCKERHUB_USERNAME || 'wardenenv' }}
  PHP_SOURCE_IMAGE_REPOSITORY: ${{ vars.WARDEN_IMAGE_REPOSITORY || 'ghcr.io/wardenenv' }}
  PHP_SOURCE_IMAGE_NAME: ${{ vars.PHP_SOURCE_IMAGE_NAME || 'centos-php' }}

jobs:
  # Get PHP versions directly from PHP releases and state files
  php-versions:
    name: PHP Setup
    runs-on: ubuntu-24.04-arm
    outputs:
      stable_versions: ${{ steps.get_php_versions.outputs.php_stable_versions }}
      security_versions: ${{ steps.get_php_versions.outputs.php_security_versions }}
      eol_versions: ${{ steps.get_php_versions.outputs.php_eol_versions}}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/get-php-versions
        id: get_php_versions
        with:
          version-constraint: ">=7.4"

  # Define some values for later stages
  define-environment:
    name: Setup Common Variables
    runs-on: ubuntu-24.04-arm
    outputs:
      environment: ${{ steps.populate_variables.outputs.environment }}
    env:
      ENVIRONMENT: ${{ inputs.environment }}
    steps:
      - name: Set Variables
        id: populate_variables
        run: |
          echo "environment=${ENVIRONMENT:-}" >> $GITHUB_OUTPUT
  define-variables:
    name: Define variables for later jobs
    runs-on: ubuntu-24.04-arm
    needs: [define-environment]
    environment: ${{ needs.define-environment.outputs.environment }}
    outputs:
      registries: ${{ steps.define-vars.outputs.registries }}
      php_source_image: ${{ steps.define-vars.outputs.php_source_image }}
    steps:
      - name: Define registries
        id: define-vars
        run: |
          REGISTRIES="[]"
          REGISTRIES=$(jq -c --arg registry "${WARDEN_IMAGE_REPOSITORY}" '. + [$registry]' <<< $REGISTRIES)
          REGISTRIES=$(jq -c --arg registry "${DOCKERHUB_IMAGE_REPOSITORY}" '. + [$registry]' <<< $REGISTRIES)
          echo "registries=${REGISTRIES}" >> $GITHUB_OUTPUT

          PHP_SOURCE_IMAGE="${PHP_SOURCE_IMAGE_REPOSITORY}/${PHP_SOURCE_IMAGE_NAME}"
          echo "php_source_image=${PHP_SOURCE_IMAGE}" >> $GITHUB_OUTPUT

          echo "::notice title=List of registries to push to::${REGISTRIES}"
          echo "::notice title=PHP source image to use::${PHP_SOURCE_IMAGE_REPOSITORY}/${PHP_SOURCE_IMAGE_NAME}"

  build-php-fpm:
    name: PHP-FPM
    needs: [php-versions, define-environment, define-variables]
    environment: ${{ needs.define-environment.outputs.environment }}
    strategy:
      matrix:
        php_version:
          - ${{ fromJSON(needs.php-versions.outputs.eol_versions).major }}
          - ${{ fromJSON(needs.php-versions.outputs.security_versions).major }}
          - ${{ fromJSON(needs.php-versions.outputs.stable_versions).major }}
        platform: [linux/arm64, linux/amd64]
        build_group: [php-fpm]
        variant: [_base]
        runner: [ubuntu-24.04-arm, ubuntu-latest]
        exclude:
          # Don't build arm on amd and vice-versa
          - platform: linux/arm64
            runner: ubuntu-latest
          - platform: linux/amd64
            runner: ubuntu-24.04-arm
    runs-on: ${{ matrix.runner }}
    steps:
      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build
        env:
          BUILD_GROUP: ${{ matrix.build_group }}
          PRE_AUTH: 1
          PUSH_FLAG: 1
          PHP_VERSION: ${{ matrix.php_version }}
          VARIANT: ${{ matrix.variant }}
          PLATFORM: ${{ matrix.platform }}
          INDEV_FLAG: ${{ github.ref == 'refs/heads/main' && '0' || '1' }}
          REGISTRIES: ${{ needs.define-variables.outputs.registries }}
          PHP_SOURCE_IMAGE: ${{ needs.define-variables.outputs.php_source_image }}
          METADATA_DIR: ${{ runner.temp }}/metadata
        run: bash php-fpm/scripts/build.sh "${BUILD_GROUP}"
      - name: Push Metadata Files
        uses: actions/upload-artifact@v4
        with:
          name: metadata-${{ matrix.php_version }}-${{ matrix.build_group }}-${{ matrix.variant }}-${{ env.PLATFORM_PAIR }}
          path: ${{ runner.temp }}/metadata/*
          if-no-files-found: error
          retention-days: 1

  push-php-fpm:
    name: Push PHP-FPM
    runs-on: ubuntu-24.04-arm
    needs: [php-versions, define-environment, define-variables, build-php-fpm]
    environment: ${{ needs.define-environment.outputs.environment }}
    strategy:
      matrix:
        php_version:
          - ${{ fromJSON(needs.php-versions.outputs.eol_versions).major }}
          - ${{ fromJSON(needs.php-versions.outputs.security_versions).major }}
          - ${{ fromJSON(needs.php-versions.outputs.stable_versions).major }}
        build_group: [php-fpm]
        variant: [_base]
        registry: ${{ fromJSON(needs.define-variables.outputs.registries) }}
    steps:
      - name: Download metadata
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/metadata
          pattern: metadata-${{ matrix.php_version}}-${{ matrix.build_group }}-${{ matrix.variant }}-*
          merge-multiple: true
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Create manifest list ${{ matrix.php_version }}
        uses: ./.github/actions/push-manifest
        with:
          repository: ${{ matrix.registry }}/php-fpm
          metadata-path: ${{ runner.temp }}/metadata
          annotations: |-
            index:org.opencontainers.image.authors=${{ env.IMAGE_AUTHORS }}
            index:org.opencontainers.image.description=Base PHP-FPM image all Warden environment images are built from